{"version":3,"sources":["assets/audio/score.wav","assets/audio/miss.wav","assets/images/logo1.png","assets/images/logo2.jfif","assets/images/logo3.jfif","assets/images/logo4.png","components/team/Team.js","components/scoreboard/Scoreboard.js","components/game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Team","props","className","src","logo","alt","name","height","width","stats","shots","style","visibility","hasShot","Math","round","score","onClick","shotHandler","ScoreBoard","id","homeTeamStats","visitingTeamStats","Game","team","teamStatsKey","state","random","scoreAudio","play","missAudio","setState","resetHandler","event","HomeTeamStats","VisitingTeamStats","resetCount","venue","homeTeam","homeTeamLogo","visitingTeam","visitingTeamLogo","Audio","ScoreAudio","MissAudio","this","React","Component","App","homeTeamLogo1","visitingTeamLogo1","homeTeamLogo2","visitingTeamLogo2","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2c315ae1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/score.1c5e2a77.wav\";","module.exports = __webpack_public_path__ + \"static/media/miss.ec73a758.wav\";","module.exports = __webpack_public_path__ + \"static/media/logo1.a26d4543.png\";","module.exports = __webpack_public_path__ + \"static/media/logo2.2594219c.jfif\";","module.exports = __webpack_public_path__ + \"static/media/logo3.3776dfaf.jfif\";","module.exports = __webpack_public_path__ + \"static/media/logo4.6c66ad1a.png\";","import React from 'react'\r\n\r\nfunction Team (props) {\r\n\r\n    return(\r\n        <div className=\"team\">\r\n            <img src={props.logo} alt={props.name} height=\"100px\" width=\"100px\" />\r\n            <h2>{props.name}</h2>\r\n            <br />\r\n            <p>Shots Taken: {props.stats.shots}</p>\r\n            <p style={{visibility: props.stats.hasShot ? \"visible\" : \"hidden\"}}>Shot Percentage: %{Math.round((props.stats.score / props.stats.shots)*100)}</p>\r\n            <br />\r\n            <p>Score: {props.stats.score}</p>\r\n            <br />\r\n            <button onClick={props.shotHandler}>Shoot</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Team","import React from 'react'\r\n\r\nfunction ScoreBoard(props) {\r\n                                \r\n    return (\r\n        <div id=\"scoreboard\">\r\n            <div>Scoreboard</div>\r\n            <div id=\"teamScores\">\r\n                <div id=\"homeScore\">\r\n                    <div>Home</div>\r\n                    <div>{props.homeTeamStats.score}</div>\r\n                </div>\r\n                <div id=\"visitingScore\">\r\n                    <div>Visitors</div>\r\n                    <div>{props.visitingTeamStats.score}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreBoard","import React from 'react'\r\nimport Team from '../team/Team'\r\nimport ScoreBoard from '../scoreboard/Scoreboard'\r\nimport ScoreAudio from '../../assets/audio/score.wav'\r\nimport MissAudio from '../../assets/audio/miss.wav'\r\n\r\nclass Game extends React.Component {\r\n    constructor (props) {\r\n        super (props)\r\n        this.state = {\r\n            venue: this.props.venue,\r\n            homeTeam: this.props.homeTeam,\r\n            homeTeamLogo: this.props.homeTeamLogo,\r\n            visitingTeam: this.props.visitingTeam,\r\n            visitingTeamLogo: this.props.visitingTeamLogo,\r\n            HomeTeamStats: {\r\n                shots: 0,\r\n                score: 0,\r\n                hasShot: false\r\n            },\r\n            VisitingTeamStats: {\r\n                shots: 0,\r\n                score: 0,\r\n                hasShot: false\r\n            },\r\n            resetCount: 0\r\n        }\r\n\r\n        this.scoreAudio = new Audio(ScoreAudio)\r\n        this.missAudio = new Audio(MissAudio)\r\n    }\r\n\r\n    shotHandler = (team) => {\r\n        const teamStatsKey = `${team}TeamStats`\r\n        let score = this.state[teamStatsKey].score\r\n        if (Math.random() >= 0.5) {\r\n            score++\r\n            this.scoreAudio.play()\r\n        }\r\n        else {\r\n            this.missAudio.play()\r\n        }\r\n        this.setState((state, props) => ({\r\n            [teamStatsKey] : {\r\n                shots: state[teamStatsKey].shots + 1,\r\n                score,\r\n                hasShot: true\r\n            },\r\n        }))\r\n    }\r\n\r\n    resetHandler = (event) => {\r\n        this.setState((state, props) => ({\r\n            HomeTeamStats: {\r\n                shots: 0,\r\n                score: 0,\r\n                hasShot: false\r\n            },\r\n            VisitingTeamStats: {\r\n                shots: 0,\r\n                score: 0,\r\n                hasShot: false\r\n            },\r\n            resetCount: state.resetCount + 1\r\n        }))\r\n    }\r\n\r\n    render(props) {\r\n        return (\r\n            <div id=\"game\">\r\n                <h1>Welcome to {this.state.venue}!</h1>\r\n                <div id=\"main\">\r\n                    <div id=\"team1\">\r\n                        <Team\r\n                            name={this.state.homeTeam}\r\n                            logo={this.state.homeTeamLogo}\r\n                            stats={this.state.HomeTeamStats}\r\n                            shotHandler={() => this.shotHandler(\"Home\")}\r\n                        />\r\n                    </div>\r\n                    <div id=\"versus\">\r\n                        <h3>VS</h3>\r\n                        <div>\r\n                            <strong>Resets:</strong> {this.state.resetCount}\r\n                        </div>\r\n                        <button onClick={this.resetHandler}>Reset</button>\r\n                        <ScoreBoard\r\n                            homeTeamStats={this.state.HomeTeamStats}\r\n                            visitingTeamStats={this.state.VisitingTeamStats} />\r\n                    </div>\r\n                    <div id=\"team2\">\r\n                        <Team\r\n                            name={this.state.visitingTeam}\r\n                            logo={this.state.visitingTeamLogo}\r\n                            stats={this.state.VisitingTeamStats}\r\n                            shotHandler={() => this.shotHandler(\"Visiting\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div id=\"empty\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game","import React from 'react';\nimport './App.css';\nimport Game from './components/game/Game'\nimport homeTeamLogo1 from './assets/images/logo1.png'\nimport visitingTeamLogo1 from './assets/images/logo2.jfif'\nimport homeTeamLogo2 from './assets/images/logo3.jfif'\nimport visitingTeamLogo2 from './assets/images/logo4.png'\n\n\nfunction App() {\n  return (\n    <div>\n      <Game\n        venue=\"The Moon\"\n        homeTeam=\"Bearcats\"\n          homeTeamLogo={homeTeamLogo1}\n          visitingTeam=\"Dragons\"\n          visitingTeamLogo={visitingTeamLogo1}\n      />\n      <Game\n        venue=\"Antarctica\"\n        homeTeam=\"The Kinguins\"\n        homeTeamLogo={homeTeamLogo2}\n        visitingTeam=\"The Sea Lions\"\n        visitingTeamLogo={visitingTeamLogo2}\n      />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}